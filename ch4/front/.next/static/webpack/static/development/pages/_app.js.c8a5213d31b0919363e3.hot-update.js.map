{"version":3,"file":"static/webpack/static/development/pages/_app.js.c8a5213d31b0919363e3.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport PropTypes from 'prop-types';\nimport withRedux from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport {Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport AppLayout from '../components/AppLayout';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst NodeSNS = ({ Component, store }) => {\n  return (\n    <Provider store={store}>\n      <Head>\n        <title>NodeSNS</title>\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/antd/3.16.2/antd.css\" />\n      </Head>\n      <AppLayout>\n        <Component />\n      </AppLayout>\n    </Provider>\n  );\n};\n\nNodeSNS.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired,\n};\n\nconst configureStore = (initialState, options) => {\n  \n  const sagaMiddleware = createSagaMiddleware();\n  \n  // 넣고싶은 미들웨어 나열\n  const middlewares = [sagaMiddleware];\n  // 프로덕션(배포에서는 데브툴즈 익스텐션 안씀)\n  const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : compose(\n      applyMiddleware(...middlewares),\n      // 서버에서는 typeof windows !== 'undefined' 를 !options.isServer 로 대체해야 함\n      // 배포할때는 익스텐션 뺴야함\n      !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n    );\n\n  const store = createStore(reducer, initialState, enhancer);\n  // 여기에 스토어 커스터마이징\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default withRedux(configureStore)(NodeSNS);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;A","sourceRoot":""}