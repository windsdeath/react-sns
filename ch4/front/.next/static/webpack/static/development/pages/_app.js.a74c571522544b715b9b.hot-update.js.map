{"version":3,"file":"static/webpack/static/development/pages/_app.js.a74c571522544b715b9b.hot-update.js","sources":["webpack:///./sagas/user.js"],"sourcesContent":["import {all, fork, put, takeLatest, take} from 'redux-saga/effects';\nimport { LOG_IN, LOG_IN_SUCCESS,LOG_IN_FAILURE } from '../reducers/user'\n\nconst HELLO_SAGA = 'HELLO_SAGA';\n\nfunction* loginAPI(){\n\n}\n\nfunction* login(){\n    try {\n        yield call(loginAPI)\n        yield put({ //put은 dispatch와 동일\n            type:LOG_IN_SUCCESS\n        })\n    } catch (e){ //loginAPI 실패\n        console.log(e);\n        yield put({\n            type:LOG_IN_FAILURE\n        })\n    }\n}\n\nfunction* watchLogin(){\n    yield takeLatest(LOG_IN, login)\n}\n\nfunction* helloSaga(){\n    yield take(HELLO_SAGA);\n    console.log('hello');\n}\n\nexport default function* userSaga (){\n    yield all([\n        fork(watchLogin),\n        helloSaga(),\n    ]);\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAKA;;;AAIA;;;AAcA;;;AAIA;;;AAKA;AACA;AAjCA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAGA;AAAA;AACA;AADA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAMA;AACA;AAPA;AAQA;AACA;AADA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}