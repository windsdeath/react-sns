{"version":3,"file":"static/webpack/static/development/pages/index.js.03a9c3fcbb21a78d57ef.hot-update.js","sources":["webpack:///./components/PostForm.js"],"sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {ADD_POST_REQUEST} from '../reducers/post';\n\nconst PostForm = () => {\n  const dispatch= useDispatch();\n  const [Text, setText] = useState('')\n  const {imagePaths,isAddingPost, postAdded} = useSelector(state => state.post)\n  \n  useEffect(() => {\n    setText('')\n  }, [postAdded === true]);\n\n  const onSubmitForm = useCallback((e)=>{\n    e.preventDefault();\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data:{\n       Text, \n      },\n    });\n  },[])\n\n  const onChangeText = useCallback((e) => {\n    setText(e.target.value);\n  }, [],\n  )\n\n  return (\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\n      <Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" />\n      <div>\n        <input type=\"file\" multiple hidden />\n        <Button>이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: 'right' }} loading={isAddingPost} htmlType=\"submit\">짹짹</Button>\n      </div>\n      <div>\n        {imagePaths.map((v) => {\n          return (\n            <div key={v} style={{ display: 'inline-block' }}>\n              <img src={'http://localhost:3065/' + v} style={{ width: '200px' }} alt={v} />\n              <div>\n                <Button>제거</Button>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAIA;AACA;AACA;;;;A","sourceRoot":""}