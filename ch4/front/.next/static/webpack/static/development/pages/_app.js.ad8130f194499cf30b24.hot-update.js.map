{"version":3,"file":"static/webpack/static/development/pages/_app.js.ad8130f194499cf30b24.hot-update.js","sources":["webpack:///./sagas/user.js"],"sourcesContent":["import {all, fork, put,takeEvery, takeLatest,delay,call,take} from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS,LOG_IN_FAILURE } from '../reducers/user'\nimport { func } from 'prop-types';\nimport { tuple } from 'antd/lib/_util/type';\n\nconst HELLO_SAGA = 'HELLO_SAGA';\n\nfunction* loginAPI(){\n\n}\n\nfunction* login(){\n    try {\n        yield call(loginAPI)\n        yield put({ //put은 dispatch와 동일\n            type:LOG_IN_SUCCESS\n        })\n    } catch (e){ //loginAPI 실패\n        console.log(e);\n        yield put({\n            type:LOG_IN_FAILURE\n        })\n    }\n}\n\nfunction* watchLogin(){\n     yield takeEvery(LOG_IN_REQUEST,login);\n    }\n\nfunction* watchSignUp(){\n\n}\n\nfunction* hello(){\n    yield delay(1000)\n    yield put({\n        type:'BYE_SAGA'\n    })\n}\n\nfunction* watchHello(){\n    yield takeLatest(HELLO_SAGA, hello)\n    }\n\n\nexport default function* userSaga (){\n    yield all([\n        fork(watchLogin),\n        fork(watchHello),\n    ])\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAOA;;;AAIA;;;AAcA;;;AAIA;;;AAIA;;;AAOA;;;AAKA;AACA;AA9CA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AAGA;AAAA;AACA;AADA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAMA;AACA;AAPA;AAQA;AACA;AADA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAEA;AACA;AADA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}