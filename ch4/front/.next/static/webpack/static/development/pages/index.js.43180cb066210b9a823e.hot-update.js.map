{"version":3,"file":"static/webpack/static/development/pages/index.js.43180cb066210b9a823e.hot-update.js","sources":["webpack:///./components/PostCard.js"],"sourcesContent":["import React,{useState, useCallback} from 'react';\nimport { Card, Icon, Button, Avatar, Input,Form,Comment, List } from 'antd';\nimport PropTypes from 'prop-types';\nimport {useSelector,useDispatch} from 'react-redux';\n\n\nconst PostCard = ({ post }) => {\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const [commentText, setCommentText] =useState('');\n  const {me} = useSelector(state=>state.user);\n  const dispatch = useDispatch();\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  },[])\n\n  const onSubmitComment = useCallback((e) => {\n    e.preventDefault();\n    if (!me){\n      return alert('로그인이 필요합니다.');\n    };\n  },[me && me.id]);\n\n  const onChangeCommentText = useCallback((e)=> {\n    setCommentText(e.target.value);\n  },[])\n\n  return (\n    <div>\n    <Card\n      key={+post.createdAt}\n      cover={post.img && <img alt=\"example\" src={post.img} />}\n      actions={[\n        <Icon type=\"retweet\" key=\"retweet\" />,\n        <Icon type=\"heart\" key=\"heart\" />,\n        <Icon type=\"message\" key=\"message\" onClick={onToggleComment} />,\n        <Icon type=\"ellipsis\" key=\"ellipsis\" />,\n      ]}\n      extra={<Button>팔로우</Button>}\n    >\n      <Card.Meta\n        avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n        title={post.User.nickname}\n        description={post.content}\n      />\n    </Card>\n    {commentFormOpened && (\n      <>\n      <Form onSubmit={onSubmitComment}>\n        <Form.Item>\n          <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText}/>\n        </Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\n      </Form>\n      <List\n        header={`${post.Comments ? post.Comments.length : 0} 댓글`}\n        itemLayout=\"horizontal\"\n        dataSource={post.Comment || []}\n        renderItem={item => (\n          <li>\n            <Comment\n              author={item.User.nickname}\n              avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n              content={item.content}\n              datetime={item.createdAt}\n              />\n          </li>\n        )}\n      >\n\n      </List>\n      </>\n    )}\n    </div>\n  );\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    User: PropTypes.object,\n    content: PropTypes.string,\n    img: PropTypes.string,\n    createdAt: PropTypes.object,\n  }),\n};\n\nexport default PostCard;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AACA;AAGA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;;;;A","sourceRoot":""}